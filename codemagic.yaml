workflows:
  gwa-android-build:
    name: Golden WebView Android (Build Only)
    environment:
      flutter: stable
    scripts:
      - name: Prepare Flutter project
        script: |
          rm -rf app || true
          flutter create app
          cd app
          flutter pub add webview_flutter
          # write main.dart from template using env vars
          mkdir -p lib
          SITE_URL=${GWA_SITE_URL:-"https://example.com/"}
          APP_NAME=${GWA_APP_NAME:-"GoldenApp"}
          ORIENTATION=${GWA_PLATFORM_ORIENTATION:-"system"}
          USER_AGENT=${GWA_USER_AGENT:-""}
          THEME_COLOR=${GWA_THEME_COLOR:-"#2196f3"}
          SPLASH_BG_MODE=${GWA_SPLASH_BG_MODE:-"color"}
          SPLASH_BG_COLOR=${GWA_SPLASH_BG_COLOR:-"$THEME_COLOR"}
          SPLASH_TAGLINE=${GWA_SPLASH_TAGLINE:-""}
          SPLASH_TEXT_THEME=${GWA_SPLASH_TEXT_THEME:-"light"}
          SPLASH_DELAY=${GWA_SPLASH_DELAY:-"3"}
          SPLASH_DISPLAY_LOGO=${GWA_SPLASH_DISPLAY_LOGO:-"0"}
          SPLASH_BG_IMAGE_URL=${GWA_SPLASH_BACKGROUND_IMAGE_URL:-""}
          SPLASH_LOGO_IMAGE_URL=${GWA_SPLASH_LOGO_IMAGE_URL:-""}
          NAV_TYPE=${GWA_NAV_TYPE:-"classic"}
          NAV_ITEMS_B64=${GWA_NAV_ITEMS_B64:-""}
          perl -0777 -pe "s!__APP_NAME__!$APP_NAME!g; s!__SITE_URL__!$SITE_URL!g; s!__ORIENTATION__!$ORIENTATION!g; s!__USER_AGENT__!$USER_AGENT!g; s!__THEME_COLOR__!$THEME_COLOR!g; s!__SPLASH_BG_MODE__!$SPLASH_BG_MODE!g; s!__SPLASH_BG_COLOR__!$SPLASH_BG_COLOR!g; s!__SPLASH_TAGLINE__!$SPLASH_TAGLINE!g; s!__SPLASH_TEXT_THEME__!$SPLASH_TEXT_THEME!g; s!__SPLASH_DELAY__!$SPLASH_DELAY!g; s!__SPLASH_DISPLAY_LOGO__!$SPLASH_DISPLAY_LOGO!g; s!__SPLASH_BG_IMAGE_URL__!$SPLASH_BG_IMAGE_URL!g; s!__SPLASH_LOGO_IMAGE_URL__!$SPLASH_LOGO_IMAGE_URL!g; s!__NAV_TYPE__!$NAV_TYPE!g; s!__NAV_ITEMS_B64__!$NAV_ITEMS_B64!g;" ../templates/flutter_main.dart.tmpl > lib/main.dart
      - name: Configure icon & splash (Android)
        script: |
          cd app
          # Ensure app label under icon is updated
          APP_NAME=${GWA_APP_NAME:-"GoldenApp"}
          if [ -f android/app/src/main/res/values/strings.xml ]; then
            sed -i "s|<string name=\"app_name\">.*</string>|<string name=\"app_name\">$APP_NAME</string>|" android/app/src/main/res/values/strings.xml || true
          fi
          # Some Flutter templates hardcode label="app"; force-set to our app name
          if [ -f android/app/src/main/AndroidManifest.xml ]; then
            sed -i "s|android:label=\"[^\"]*\"|android:label=\"$APP_NAME\"|" android/app/src/main/AndroidManifest.xml || true
          fi
          # Ensure INTERNET permission exists for release builds
          if [ -f android/app/src/main/AndroidManifest.xml ]; then
            if ! grep -q 'android.permission.INTERNET' android/app/src/main/AndroidManifest.xml; then
              sed -i '0,/<application/{s//<uses-permission android:name="android.permission.INTERNET"\/>\n&/}' android/app/src/main/AndroidManifest.xml || true
            fi
            # Allow HTTP (cleartext) sites if needed
            if ! grep -q 'usesCleartextTraffic' android/app/src/main/AndroidManifest.xml; then
              sed -i 's|<application |<application android:usesCleartextTraffic="true" |' android/app/src/main/AndroidManifest.xml || true
            fi
          fi
          ICON_URL=${GWA_ICON_URL:-""}
          SPLASH_URL=${GWA_SPLASH_URL:-""}
          THEME_COLOR=${GWA_THEME_COLOR:-"#2196f3"}
          if [ -n "$ICON_URL" ]; then
            curl -L "$ICON_URL" -o icon.png || true
            flutter pub add dev:flutter_launcher_icons
            printf "%s\n" \
              "flutter_icons:" \
              "  android: true" \
              "  ios: true" \
              "  image_path: icon.png" \
              > flutter_launcher_icons.yaml
            flutter pub run flutter_launcher_icons:main || true
          fi
          if [ -n "$SPLASH_URL" ]; then
            curl -L "$SPLASH_URL" -o splash.png || true
            flutter pub add dev:flutter_native_splash
            printf "%s\n" \
              "flutter_native_splash:" \
              "  color: \"$THEME_COLOR\"" \
              "  image: splash.png" \
              "  android: true" \
              "  ios: true" \
              "  android_gravity: center" \
              "  ios_content_mode: center" \
              > flutter_native_splash.yaml
            dart run flutter_native_splash:create --path=flutter_native_splash.yaml || true
          elif [ -n "$SPLASH_LOGO_IMAGE_URL" ]; then
            # Fallback: if only logo image provided, use it for native splash image
            curl -L "$SPLASH_LOGO_IMAGE_URL" -o splash.png || true
            flutter pub add dev:flutter_native_splash
            printf "%s\n" \
              "flutter_native_splash:" \
              "  color: \"$THEME_COLOR\"" \
              "  image: splash.png" \
              "  android: true" \
              "  ios: true" \
              "  android_gravity: center" \
              "  ios_content_mode: center" \
              > flutter_native_splash.yaml
            dart run flutter_native_splash:create --path=flutter_native_splash.yaml || true
          fi
      - name: Build Android AAB & APK
        script: |
          cd app
          mkdir -p symbols
          flutter build appbundle --release --tree-shake-icons --obfuscate --split-debug-info=./symbols --target-platform android-arm,android-arm64
          flutter build apk --release --split-per-abi --tree-shake-icons --obfuscate --split-debug-info=./symbols --target-platform android-arm,android-arm64
    artifacts:
      # Cover both when artifacts are searched from repo root or from within 'app/' directory
      - app/build/**/outputs/**/*.aab
      - app/build/**/outputs/**/*.apk
      - build/**/outputs/**/*.aab
      - build/**/outputs/**/*.apk
      - app/symbols/**

  gwa-android-publish:
    name: Golden WebView Android (Publish)
    environment:
      flutter: stable
      vars:
        GWA_GOOGLE_PLAY_TRACK: internal
    scripts:
      - name: Prepare Flutter project
        script: |
          rm -rf app || true
          flutter create app
          cd app
          flutter pub add webview_flutter
          # write main.dart from template using env vars
          mkdir -p lib
          SITE_URL=${GWA_SITE_URL:-"https://example.com/"}
          APP_NAME=${GWA_APP_NAME:-"GoldenApp"}
          ORIENTATION=${GWA_PLATFORM_ORIENTATION:-"system"}
          USER_AGENT=${GWA_USER_AGENT:-""}
          THEME_COLOR=${GWA_THEME_COLOR:-"#2196f3"}
          SPLASH_BG_MODE=${GWA_SPLASH_BG_MODE:-"color"}
          SPLASH_BG_COLOR=${GWA_SPLASH_BG_COLOR:-"$THEME_COLOR"}
          SPLASH_TAGLINE=${GWA_SPLASH_TAGLINE:-""}
          SPLASH_TEXT_THEME=${GWA_SPLASH_TEXT_THEME:-"light"}
          SPLASH_DELAY=${GWA_SPLASH_DELAY:-"3"}
          SPLASH_DISPLAY_LOGO=${GWA_SPLASH_DISPLAY_LOGO:-"0"}
          SPLASH_BG_IMAGE_URL=${GWA_SPLASH_BACKGROUND_IMAGE_URL:-""}
          SPLASH_LOGO_IMAGE_URL=${GWA_SPLASH_LOGO_IMAGE_URL:-""}
          NAV_TYPE=${GWA_NAV_TYPE:-"classic"}
          NAV_ITEMS_B64=${GWA_NAV_ITEMS_B64:-""}
          perl -0777 -pe "s!__APP_NAME__!$APP_NAME!g; s!__SITE_URL__!$SITE_URL!g; s!__ORIENTATION__!$ORIENTATION!g; s!__USER_AGENT__!$USER_AGENT!g; s!__THEME_COLOR__!$THEME_COLOR!g; s!__SPLASH_BG_MODE__!$SPLASH_BG_MODE!g; s!__SPLASH_BG_COLOR__!$SPLASH_BG_COLOR!g; s!__SPLASH_TAGLINE__!$SPLASH_TAGLINE!g; s!__SPLASH_TEXT_THEME__!$SPLASH_TEXT_THEME!g; s!__SPLASH_DELAY__!$SPLASH_DELAY!g; s!__SPLASH_DISPLAY_LOGO__!$SPLASH_DISPLAY_LOGO!g; s!__SPLASH_BG_IMAGE_URL__!$SPLASH_BG_IMAGE_URL!g; s!__SPLASH_LOGO_IMAGE_URL__!$SPLASH_LOGO_IMAGE_URL!g; s!__NAV_TYPE__!$NAV_TYPE!g; s!__NAV_ITEMS_B64__!$NAV_ITEMS_B64!g;" ../templates/flutter_main.dart.tmpl > lib/main.dart
      - name: Configure icon & splash (Android)
        script: |
          cd app
          # Ensure app label under icon is updated
          APP_NAME=${GWA_APP_NAME:-"GoldenApp"}
          if [ -f android/app/src/main/res/values/strings.xml ]; then
            sed -i "s|<string name=\"app_name\">.*</string>|<string name=\"app_name\">$APP_NAME</string>|" android/app/src/main/res/values/strings.xml || true
          fi
          # Some Flutter templates hardcode label="app"; force-set to our app name
          if [ -f android/app/src/main/AndroidManifest.xml ]; then
            sed -i "s|android:label=\"[^\"]*\"|android:label=\"$APP_NAME\"|" android/app/src/main/AndroidManifest.xml || true
          fi
          # Ensure INTERNET permission exists for release builds
          if [ -f android/app/src/main/AndroidManifest.xml ]; then
            if ! grep -q 'android.permission.INTERNET' android/app/src/main/AndroidManifest.xml; then
              sed -i '0,/<application/{s//<uses-permission android:name="android.permission.INTERNET"\/>\n&/}' android/app/src/main/AndroidManifest.xml || true
            fi
            # Allow HTTP (cleartext) sites if needed
            if ! grep -q 'usesCleartextTraffic' android/app/src/main/AndroidManifest.xml; then
              sed -i 's|<application |<application android:usesCleartextTraffic="true" |' android/app/src/main/AndroidManifest.xml || true
            fi
          fi
          ICON_URL=${GWA_ICON_URL:-""}
          SPLASH_URL=${GWA_SPLASH_URL:-""}
          THEME_COLOR=${GWA_THEME_COLOR:-"#2196f3"}
          if [ -n "$ICON_URL" ]; then
            curl -L "$ICON_URL" -o icon.png || true
            flutter pub add dev:flutter_launcher_icons
            printf "%s\n" \
              "flutter_icons:" \
              "  android: true" \
              "  ios: true" \
              "  image_path: icon.png" \
              > flutter_launcher_icons.yaml
            flutter pub run flutter_launcher_icons:main || true
          fi
          if [ -n "$SPLASH_URL" ]; then
            curl -L "$SPLASH_URL" -o splash.png || true
            flutter pub add dev:flutter_native_splash
            printf "%s\n" \
              "flutter_native_splash:" \
              "  color: \"$THEME_COLOR\"" \
              "  image: splash.png" \
              "  android: true" \
              "  ios: true" \
              "  android_gravity: center" \
              "  ios_content_mode: center" \
              > flutter_native_splash.yaml
            dart run flutter_native_splash:create --path=flutter_native_splash.yaml || true
          elif [ -n "$SPLASH_LOGO_IMAGE_URL" ]; then
            # Fallback: only logo provided
            curl -L "$SPLASH_LOGO_IMAGE_URL" -o splash.png || true
            flutter pub add dev:flutter_native_splash
            printf "%s\n" \
              "flutter_native_splash:" \
              "  color: \"$THEME_COLOR\"" \
              "  image: splash.png" \
              "  android: true" \
              "  ios: true" \
              "  android_gravity: center" \
              "  ios_content_mode: center" \
              > flutter_native_splash.yaml
            dart run flutter_native_splash:create --path=flutter_native_splash.yaml || true
          fi
      - name: Build Android AAB & APK
        script: |
          cd app
          mkdir -p symbols
          flutter build appbundle --release --tree-shake-icons --obfuscate --split-debug-info=./symbols --target-platform android-arm,android-arm64
          flutter build apk --release --split-per-abi --tree-shake-icons --obfuscate --split-debug-info=./symbols --target-platform android-arm,android-arm64
    artifacts:
      - app/build/**/outputs/**/*.aab
      - app/build/**/outputs/**/*.apk
      - app/symbols/**
  gwa-ios-build:
    name: Golden WebView iOS (Build Only)
    environment:
      flutter: stable
      xcode: latest
    scripts:
      - name: Prepare Flutter project
        script: |
          rm -rf app || true
          flutter create app
          cd app
          flutter pub add webview_flutter
          mkdir -p lib
          SITE_URL=${GWA_SITE_URL:-"https://example.com/"}
          APP_NAME=${GWA_APP_NAME:-"GoldenApp"}
          ORIENTATION=${GWA_PLATFORM_ORIENTATION:-"system"}
          USER_AGENT=${GWA_USER_AGENT:-""}
          THEME_COLOR=${GWA_THEME_COLOR:-"#2196f3"}
          SPLASH_BG_MODE=${GWA_SPLASH_BG_MODE:-"color"}
          SPLASH_BG_COLOR=${GWA_SPLASH_BG_COLOR:-"$THEME_COLOR"}
          SPLASH_TAGLINE=${GWA_SPLASH_TAGLINE:-""}
          SPLASH_TEXT_THEME=${GWA_SPLASH_TEXT_THEME:-"light"}
          SPLASH_DELAY=${GWA_SPLASH_DELAY:-"3"}
          SPLASH_DISPLAY_LOGO=${GWA_SPLASH_DISPLAY_LOGO:-"0"}
          SPLASH_BG_IMAGE_URL=${GWA_SPLASH_BACKGROUND_IMAGE_URL:-""}
          SPLASH_LOGO_IMAGE_URL=${GWA_SPLASH_LOGO_IMAGE_URL:-""}
          NAV_TYPE=${GWA_NAV_TYPE:-"classic"}
          NAV_ITEMS_B64=${GWA_NAV_ITEMS_B64:-""}
          perl -0777 -pe "s!__APP_NAME__!$APP_NAME!g; s!__SITE_URL__!$SITE_URL!g; s!__ORIENTATION__!$ORIENTATION!g; s!__USER_AGENT__!$USER_AGENT!g; s!__THEME_COLOR__!$THEME_COLOR!g; s!__SPLASH_BG_MODE__!$SPLASH_BG_MODE!g; s!__SPLASH_BG_COLOR__!$SPLASH_BG_COLOR!g; s!__SPLASH_TAGLINE__!$SPLASH_TAGLINE!g; s!__SPLASH_TEXT_THEME__!$SPLASH_TEXT_THEME!g; s!__SPLASH_DELAY__!$SPLASH_DELAY!g; s!__SPLASH_DISPLAY_LOGO__!$SPLASH_DISPLAY_LOGO!g; s!__SPLASH_BG_IMAGE_URL__!$SPLASH_BG_IMAGE_URL!g; s!__SPLASH_LOGO_IMAGE_URL__!$SPLASH_LOGO_IMAGE_URL!g; s!__NAV_TYPE__!$NAV_TYPE!g; s!__NAV_ITEMS_B64__!$NAV_ITEMS_B64!g;" ../templates/flutter_main.dart.tmpl > lib/main.dart
      - name: Configure icon & splash (iOS)
        script: |
          cd app
          # Set iOS display name under icon
          APP_NAME=${GWA_APP_NAME:-"GoldenApp"}
          /usr/libexec/PlistBuddy -c "Set :CFBundleDisplayName $APP_NAME" ios/Runner/Info.plist || /usr/libexec/PlistBuddy -c "Add :CFBundleDisplayName string $APP_NAME" ios/Runner/Info.plist || true
          ICON_URL=${GWA_ICON_URL:-""}
          SPLASH_URL=${GWA_SPLASH_URL:-""}
          SPLASH_LOGO_IMAGE_URL=${GWA_SPLASH_LOGO_IMAGE_URL:-""}
          THEME_COLOR=${GWA_THEME_COLOR:-"#2196f3"}
          if [ -n "$ICON_URL" ]; then
            curl -L "$ICON_URL" -o icon.png || true
            flutter pub add dev:flutter_launcher_icons
            printf "%s\n" \
              "flutter_icons:" \
              "  android: true" \
              "  ios: true" \
              "  image_path: icon.png" \
              > flutter_launcher_icons.yaml
            flutter pub run flutter_launcher_icons:main || true
          fi
          if [ -n "$SPLASH_URL" ]; then
            curl -L "$SPLASH_URL" -o splash.png || true
            flutter pub add dev:flutter_native_splash
            printf "%s\n" \
              "flutter_native_splash:" \
              "  color: \"$THEME_COLOR\"" \
              "  image: splash.png" \
              "  android: true" \
              "  ios: true" \
              "  android_gravity: center" \
              "  ios_content_mode: center" \
              > flutter_native_splash.yaml
            dart run flutter_native_splash:create --path=flutter_native_splash.yaml || true
          elif [ -n "$SPLASH_LOGO_IMAGE_URL" ]; then
            curl -L "$SPLASH_LOGO_IMAGE_URL" -o splash.png || true
            flutter pub add dev:flutter_native_splash
            printf "%s\n" \
              "flutter_native_splash:" \
              "  color: \"$THEME_COLOR\"" \
              "  image: splash.png" \
              "  android: true" \
              "  ios: true" \
              "  android_gravity: center" \
              "  ios_content_mode: center" \
              > flutter_native_splash.yaml
            dart run flutter_native_splash:create --path=flutter_native_splash.yaml || true
          fi
      - name: Build iOS (unsigned if no creds)
        script: |
          cd app
          if [ -n "$GWA_APPSTORE_KEY_ID" ] && [ -n "$GWA_APPSTORE_ISSUER_ID" ] && [ -n "$GWA_APPSTORE_PRIVATE_KEY" ]; then
            echo "iOS signing credentials detected. Building signed IPA."
            flutter build ipa --release
          else
            echo "No iOS signing credentials found. Building unsigned iOS app (no codesign)."
            flutter build ios --release --no-codesign
          fi
    artifacts:
      - app/build/ios/ipa/*.ipa
      - app/build/ios/iphoneos/*.app
      - build/ios/ipa/*.ipa
      - build/ios/iphoneos/*.app

  gwa-ios-publish:
    name: Golden WebView iOS (Publish)
    environment:
      flutter: stable
      xcode: latest
    scripts:
      - name: Prepare Flutter project
        script: |
          rm -rf app || true
          flutter create app
          cd app
          flutter pub add webview_flutter
          mkdir -p lib
          SITE_URL=${GWA_SITE_URL:-"https://example.com/"}
          APP_NAME=${GWA_APP_NAME:-"GoldenApp"}
          ORIENTATION=${GWA_PLATFORM_ORIENTATION:-"system"}
          USER_AGENT=${GWA_USER_AGENT:-""}
          THEME_COLOR=${GWA_THEME_COLOR:-"#2196f3"}
          SPLASH_BG_MODE=${GWA_SPLASH_BG_MODE:-"color"}
          SPLASH_BG_COLOR=${GWA_SPLASH_BG_COLOR:-"$THEME_COLOR"}
          SPLASH_TAGLINE=${GWA_SPLASH_TAGLINE:-""}
          SPLASH_TEXT_THEME=${GWA_SPLASH_TEXT_THEME:-"light"}
          SPLASH_DELAY=${GWA_SPLASH_DELAY:-"3"}
          SPLASH_DISPLAY_LOGO=${GWA_SPLASH_DISPLAY_LOGO:-"0"}
          SPLASH_BG_IMAGE_URL=${GWA_SPLASH_BACKGROUND_IMAGE_URL:-""}
          SPLASH_LOGO_IMAGE_URL=${GWA_SPLASH_LOGO_IMAGE_URL:-""}
          NAV_TYPE=${GWA_NAV_TYPE:-"classic"}
          NAV_ITEMS_B64=${GWA_NAV_ITEMS_B64:-""}
          perl -0777 -pe "s!__APP_NAME__!$APP_NAME!g; s!__SITE_URL__!$SITE_URL!g; s!__ORIENTATION__!$ORIENTATION!g; s!__USER_AGENT__!$USER_AGENT!g; s!__THEME_COLOR__!$THEME_COLOR!g; s!__SPLASH_BG_MODE__!$SPLASH_BG_MODE!g; s!__SPLASH_BG_COLOR__!$SPLASH_BG_COLOR!g; s!__SPLASH_TAGLINE__!$SPLASH_TAGLINE!g; s!__SPLASH_TEXT_THEME__!$SPLASH_TEXT_THEME!g; s!__SPLASH_DELAY__!$SPLASH_DELAY!g; s!__SPLASH_DISPLAY_LOGO__!$SPLASH_DISPLAY_LOGO!g; s!__SPLASH_BG_IMAGE_URL__!$SPLASH_BG_IMAGE_URL!g; s!__SPLASH_LOGO_IMAGE_URL__!$SPLASH_LOGO_IMAGE_URL!g; s!__NAV_TYPE__!$NAV_TYPE!g; s!__NAV_ITEMS_B64__!$NAV_ITEMS_B64!g;" ../templates/flutter_main.dart.tmpl > lib/main.dart
      - name: Configure icon & splash (iOS)
        script: |
          cd app
          ICON_URL=${GWA_ICON_URL:-""}
          SPLASH_URL=${GWA_SPLASH_URL:-""}
          SPLASH_LOGO_IMAGE_URL=${GWA_SPLASH_LOGO_IMAGE_URL:-""}
          THEME_COLOR=${GWA_THEME_COLOR:-"#2196f3"}
          if [ -n "$ICON_URL" ]; then
            curl -L "$ICON_URL" -o icon.png || true
            flutter pub add dev:flutter_launcher_icons
            printf "%s\n" \
              "flutter_icons:" \
              "  android: true" \
              "  ios: true" \
              "  image_path: icon.png" \
              > flutter_launcher_icons.yaml
            flutter pub run flutter_launcher_icons:main || true
          fi
          if [ -n "$SPLASH_URL" ]; then
            curl -L "$SPLASH_URL" -o splash.png || true
            flutter pub add dev:flutter_native_splash
            printf "%s\n" \
              "flutter_native_splash:" \
              "  color: \"$THEME_COLOR\"" \
              "  image: splash.png" \
              "  android: true" \
              "  ios: true" \
              "  android_gravity: center" \
              "  ios_content_mode: center" \
              > flutter_native_splash.yaml
            dart run flutter_native_splash:create --path=flutter_native_splash.yaml || true
          elif [ -n "$SPLASH_LOGO_IMAGE_URL" ]; then
            curl -L "$SPLASH_LOGO_IMAGE_URL" -o splash.png || true
            flutter pub add dev:flutter_native_splash
            printf "%s\n" \
              "flutter_native_splash:" \
              "  color: \"$THEME_COLOR\"" \
              "  image: splash.png" \
              "  android: true" \
              "  ios: true" \
              "  android_gravity: center" \
              "  ios_content_mode: center" \
              > flutter_native_splash.yaml
            dart run flutter_native_splash:create --path=flutter_native_splash.yaml || true
          fi
      - name: Build iOS IPA (signed)
        script: |
          cd app
          flutter build ipa --release
    artifacts:
      - app/build/ios/ipa/*.ipa
